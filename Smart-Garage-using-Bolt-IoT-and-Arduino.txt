#include <Servo.h>
#include <BoltIoT-Arduino-Helper.h>

// Replace with your Bolt device credentials
char device_api_key[] = "Your_Device_API_Key";
char device_id[] = "Your_Device_ID";

// Pin configuration
#define BUTTON_PIN 2  // Pin for manual control button
#define SERVO_PIN 9   // Pin for the servo motor

Servo garageDoorServo;

bool isDoorOpen = false;

void setup() {
  Serial.begin(115200);

  // Initialize Bolt IoT
  boltiot.begin(device_api_key, device_id, Serial);
  setupBoltIoTCallbacks();

  // Setup servo motor
  garageDoorServo.attach(SERVO_PIN);

  // Setup button pin
  pinMode(BUTTON_PIN, INPUT_PULLUP);

  // Initial door state
  closeDoor();
}

void loop() {
  boltiot.handleCommand();
  checkButton();

  // Additional code for other functionalities like laser, voice commands, and notifications
}

void openDoor() {
  garageDoorServo.write(0);  // Adjust the servo position for your setup
  isDoorOpen = true;
}

void closeDoor() {
  garageDoorServo.write(90);  // Adjust the servo position for your setup
  isDoorOpen = false;
}

void checkButton() {
  int buttonState = digitalRead(BUTTON_PIN);

  if (buttonState == LOW) {
    if (isDoorOpen) {
      closeDoor();
      boltiot.digitalWrite("0", "LOW");  // Send status to Bolt Cloud
    } else {
      openDoor();
      boltiot.digitalWrite("0", "HIGH");  // Send status to Bolt Cloud
    }
    delay(1000);  // Debounce
  }
}

void BoltIoTEventCallback(BoltIoTEventCode event) {
  if (event == BoltIoTEventCode::DeviceConnected) {
    Serial.println("Connected to Bolt Cloud");
  } else if (event == BoltIoTEventCode::DeviceDisconnected) {
    Serial.println("Disconnected from Bolt Cloud");
  }
}

void BoltIoTCommandCallback(String command, String value) {
  // Handle Bolt Cloud commands if needed
}

void setupBoltIoTCallbacks() {
  boltiot.setEventHandler(BoltIoTEventCallback);
  boltiot.setCommandHandler(BoltIoTCommandCallback);
}

